<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: src/DataRecorder.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.4.3</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DataRecorder.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_data_recorder_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef DATARECORDER_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define DATARECORDER_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;NotSupportedData.hpp&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_recording_options_8hpp.xhtml">RecordingOptions.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;LockedRadarForward.hpp&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">struct </span>Logger;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_xe_thru.xhtml">XeThru</a> {</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span>ModuleConnectorImpl;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>DataRecorderPrivate;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="class_xe_thru_1_1_data_recorder.xhtml">   37</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="class_xe_thru_1_1_data_recorder.xhtml#a7c474168931972cfeeb38ed7f08e46bb">   55</a></span>&#160;    <span class="keyword">typedef</span> std::function&lt;void(XeThru::DataType, const std::string&amp;)&gt; <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a7c474168931972cfeeb38ed7f08e46bb">FileAvailableCallback</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="class_xe_thru_1_1_data_recorder.xhtml#a8446ecbd31b9267f7b216c6cf9046cbf">   72</a></span>&#160;    <span class="keyword">typedef</span> std::function&lt;void(const std::string &amp;, const std::string&amp;)&gt; <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a8446ecbd31b9267f7b216c6cf9046cbf">MetaFileAvailableCallback</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">DataRecorder</a>();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">DataRecorder</a>(LockedRadarInterfacePtr &amp;radar_interface);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">DataRecorder</a>(Logger &amp;logger);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a32d68c4c2b8c6916eccb27a511eef5db">~DataRecorder</a>();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a0c0ec22bd31d182f08452c1bfcaf8cf6">start_recording</a>(<a class="code" href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">XeThru::DataTypes</a> data_types, <span class="keyword">const</span> std::string &amp;directory,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        <span class="keyword">const</span> <a class="code" href="class_xe_thru_1_1_recording_options.xhtml">XeThru::RecordingOptions</a> &amp;options = <a class="code" href="class_xe_thru_1_1_recording_options.xhtml">XeThru::RecordingOptions</a>());</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ac3b134e910ea00a9edf14a8dea7b25be">stop_recording</a>(<a class="code" href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">XeThru::DataTypes</a> data_types);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a2f41cd9969ee450d4f657e5208fe173a">is_recording</a>(<a class="code" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">XeThru::DataType</a> data_type) <span class="keyword">const</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a736098bcec20e9561d9354ce556dc3fc">process</a>(<a class="code" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">XeThru::DataType</a> data_type, <span class="keyword">const</span> Bytes &amp;data);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a24c86f560481264af80cee9b7a5e5b86">subscribe_to_file_available</a>(<a class="code" href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">DataTypes</a> data_types, <span class="keyword">const</span> FileAvailableCallback &amp;callback);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#aaf5725c05b02ffac9d5991db898decc2">unsubscribe_to_file_available</a>(<a class="code" href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">XeThru::DataTypes</a> data_types);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a2972e2177738e2a3404518325e9c4124">subscribe_to_meta_file_available</a>(<span class="keyword">const</span> MetaFileAvailableCallback &amp;callback);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ac28266d06a8434134aa6c09d3ca43792">unsubscribe_to_meta_file_available</a>();</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#af1750f1a6083f60aec9fb743e8ee2ddb">set_basename_for_data_type</a>(<a class="code" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">XeThru::DataType</a> data_type, <span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    std::string <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a418795b4615b9f113d92597ee59709c1">get_basename_for_data_type</a>(<a class="code" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">XeThru::DataType</a> data_type) <span class="keyword">const</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a2a2af7eebc1d244f31db53d1237278a1">clear_basename_for_data_types</a>(<a class="code" href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">XeThru::DataTypes</a> data_types);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#a8ae81b7bfb01230c62f075905e6651aa">data_type_to_string</a>(<a class="code" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">XeThru::DataType</a> data_type);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">DataRecorder</a>(<span class="keyword">const</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a> &amp;other) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">DataRecorder</a>(<a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a> &amp;&amp;other) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a>&amp; operator= (<span class="keyword">const</span> <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a> &amp;other) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a>&amp; operator= (<a class="code" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a> &amp;&amp;other) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keyword">friend</span> RadarInterface;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    DataRecorderPrivate *d_ptr;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;};</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;} <span class="comment">// namespace XeThru</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#endif // DATARECORDER_H</span></div><div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a736098bcec20e9561d9354ce556dc3fc"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a736098bcec20e9561d9354ce556dc3fc">XeThru::DataRecorder::process</a></div><div class="ttdeci">bool process(XeThru::DataType data_type, const Bytes &amp;data)</div><div class="ttdoc">This function should not be used when recording data from a physical xethru device. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_aaf5725c05b02ffac9d5991db898decc2"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#aaf5725c05b02ffac9d5991db898decc2">XeThru::DataRecorder::unsubscribe_to_file_available</a></div><div class="ttdeci">void unsubscribe_to_file_available(XeThru::DataTypes data_types)</div><div class="ttdoc">Unsubscribes to notifications when a recorded file for a data type is available. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_ac28266d06a8434134aa6c09d3ca43792"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#ac28266d06a8434134aa6c09d3ca43792">XeThru::DataRecorder::unsubscribe_to_meta_file_available</a></div><div class="ttdeci">int unsubscribe_to_meta_file_available()</div><div class="ttdoc">Unsubscribes to notifications when a meta file is available. </div></div>
<div class="ttc" id="class_xe_thru_1_1_recording_options_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_recording_options.xhtml">XeThru::RecordingOptions</a></div><div class="ttdoc">The RecordingOptions class allows specifying options for recording. </div><div class="ttdef"><b>Definition:</b> RecordingOptions.hpp:21</div></div>
<div class="ttc" id="namespace_xe_thru_xhtml"><div class="ttname"><a href="namespace_xe_thru.xhtml">XeThru</a></div><div class="ttdef"><b>Definition:</b> Data.hpp:7</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a2f41cd9969ee450d4f657e5208fe173a"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a2f41cd9969ee450d4f657e5208fe173a">XeThru::DataRecorder::is_recording</a></div><div class="ttdeci">bool is_recording(XeThru::DataType data_type) const</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_ac3b134e910ea00a9edf14a8dea7b25be"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#ac3b134e910ea00a9edf14a8dea7b25be">XeThru::DataRecorder::stop_recording</a></div><div class="ttdeci">void stop_recording(XeThru::DataTypes data_types)</div><div class="ttdoc">Stops recording the specified data type(s). </div></div>
<div class="ttc" id="_recording_options_8hpp_xhtml"><div class="ttname"><a href="_recording_options_8hpp.xhtml">RecordingOptions.hpp</a></div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a24c86f560481264af80cee9b7a5e5b86"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a24c86f560481264af80cee9b7a5e5b86">XeThru::DataRecorder::subscribe_to_file_available</a></div><div class="ttdeci">int subscribe_to_file_available(DataTypes data_types, const FileAvailableCallback &amp;callback)</div><div class="ttdoc">Subscribes to notifications when a recorded file for a data type is available. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a2972e2177738e2a3404518325e9c4124"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a2972e2177738e2a3404518325e9c4124">XeThru::DataRecorder::subscribe_to_meta_file_available</a></div><div class="ttdeci">int subscribe_to_meta_file_available(const MetaFileAvailableCallback &amp;callback)</div><div class="ttdoc">Subscribes to notifications when a meta file is available. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a418795b4615b9f113d92597ee59709c1"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a418795b4615b9f113d92597ee59709c1">XeThru::DataRecorder::get_basename_for_data_type</a></div><div class="ttdeci">std::string get_basename_for_data_type(XeThru::DataType data_type) const</div><div class="ttdoc">Gets the basename for the specified data type. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_ab5268fda508fab3a32c275fbd421c845"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#ab5268fda508fab3a32c275fbd421c845">XeThru::DataRecorder::DataRecorder</a></div><div class="ttdeci">DataRecorder()</div><div class="ttdoc">Constructs recorder. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a0c0ec22bd31d182f08452c1bfcaf8cf6"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a0c0ec22bd31d182f08452c1bfcaf8cf6">XeThru::DataRecorder::start_recording</a></div><div class="ttdeci">int start_recording(XeThru::DataTypes data_types, const std::string &amp;directory, const XeThru::RecordingOptions &amp;options=XeThru::RecordingOptions())</div><div class="ttdoc">Starts recording the specified data type(s) and output recorded files to the directory specified...</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a2a2af7eebc1d244f31db53d1237278a1"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a2a2af7eebc1d244f31db53d1237278a1">XeThru::DataRecorder::clear_basename_for_data_types</a></div><div class="ttdeci">void clear_basename_for_data_types(XeThru::DataTypes data_types)</div><div class="ttdoc">Resets the basename(s) to default value(s) for the specified data type(s). </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml">XeThru::DataRecorder</a></div><div class="ttdoc">The DataRecorder class allows recording of xethru data types to disk. </div><div class="ttdef"><b>Definition:</b> DataRecorder.hpp:37</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a32d68c4c2b8c6916eccb27a511eef5db"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a32d68c4c2b8c6916eccb27a511eef5db">XeThru::DataRecorder::~DataRecorder</a></div><div class="ttdeci">~DataRecorder()</div><div class="ttdoc">Destroys the recorder. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a8446ecbd31b9267f7b216c6cf9046cbf"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a8446ecbd31b9267f7b216c6cf9046cbf">XeThru::DataRecorder::MetaFileAvailableCallback</a></div><div class="ttdeci">std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt; MetaFileAvailableCallback</div><div class="ttdoc">Typedef for std::function&lt;void(const std::string&amp;, const std::string&amp;)&gt;. </div><div class="ttdef"><b>Definition:</b> DataRecorder.hpp:72</div></div>
<div class="ttc" id="datatypes_8h_xhtml_afb6eb4f28419b652027fad41104a6d22"><div class="ttname"><a href="datatypes_8h.xhtml#afb6eb4f28419b652027fad41104a6d22">DataTypes</a></div><div class="ttdeci">uint32_t DataTypes</div><div class="ttdoc">DataTypes is a bitmask that consists of a combination of DataType flags. </div><div class="ttdef"><b>Definition:</b> datatypes.h:53</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a8ae81b7bfb01230c62f075905e6651aa"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a8ae81b7bfb01230c62f075905e6651aa">XeThru::DataRecorder::data_type_to_string</a></div><div class="ttdeci">static std::string data_type_to_string(XeThru::DataType data_type)</div><div class="ttdoc">Convenience method for converting data type to human readable string representation. </div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_af1750f1a6083f60aec9fb743e8ee2ddb"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#af1750f1a6083f60aec9fb743e8ee2ddb">XeThru::DataRecorder::set_basename_for_data_type</a></div><div class="ttdeci">void set_basename_for_data_type(XeThru::DataType data_type, const std::string &amp;name)</div><div class="ttdoc">Sets the basename for the specified data type. </div></div>
<div class="ttc" id="datatypes_8h_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">This enum type is used to specify which data type to record from the module. </div><div class="ttdef"><b>Definition:</b> datatypes.h:27</div></div>
<div class="ttc" id="class_xe_thru_1_1_data_recorder_xhtml_a7c474168931972cfeeb38ed7f08e46bb"><div class="ttname"><a href="class_xe_thru_1_1_data_recorder.xhtml#a7c474168931972cfeeb38ed7f08e46bb">XeThru::DataRecorder::FileAvailableCallback</a></div><div class="ttdeci">std::function&lt; void(XeThru::DataType, const std::string &amp;)&gt; FileAvailableCallback</div><div class="ttdoc">Typedef for std::function&lt;void(Xethru::DataType, const std::string&amp;)&gt;. </div><div class="ttdef"><b>Definition:</b> DataRecorder.hpp:55</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
